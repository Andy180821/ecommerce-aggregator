import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";

export default function Dashboard() {
  const [products, setProducts] = useState([]);
  const [newProduct, setNewProduct] = useState({ name: "", price: "", stock: "" });
  const [loadingIndex, setLoadingIndex] = useState(null);

  const handleAddProduct = () => {
    if (!newProduct.name || !newProduct.price || !newProduct.stock) return;
    setProducts([...products, newProduct]);
    setNewProduct({ name: "", price: "", stock: "" });
  };

  const syncToPlatform = async (platform, product, index) => {
    setLoadingIndex(index);
    try {
      const response = await fetch(`/api/sync/${platform}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(product),
      });
      const data = await response.json();
      alert(`${platform} Sync: ${data.message}`);
    } catch (error) {
      alert(`Error syncing to ${platform}: ${error.message}`);
    } finally {
      setLoadingIndex(null);
    }
  };

  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4">Seller Dashboard</h1>
      <Tabs defaultValue="products">
        <TabsList>
          <TabsTrigger value="products">My Products</TabsTrigger>
          <TabsTrigger value="add">Add Product</TabsTrigger>
        </TabsList>

        <TabsContent value="products">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4">
            {products.map((product, index) => (
              <Card key={index}>
                <CardContent className="p-4">
                  <p className="font-semibold">{product.name}</p>
                  <p>Price: ${product.price}</p>
                  <p>Stock: {product.stock}</p>
                  <div className="flex gap-2 mt-2">
                    <Button
                      variant="secondary"
                      onClick={() => syncToPlatform("amazon", product, index)}
                      disabled={loadingIndex === index}
                    >
                      {loadingIndex === index ? "Syncing..." : "Sync to Amazon"}
                    </Button>
                    <Button
                      variant="secondary"
                      onClick={() => syncToPlatform("flipkart", product, index)}
                      disabled={loadingIndex === index}
                    >
                      {loadingIndex === index ? "Syncing..." : "Sync to Flipkart"}
                    </Button>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </TabsContent>

        <TabsContent value="add">
          <div className="flex flex-col gap-4 max-w-sm mt-4">
            <Input
              placeholder="Product Name"
              value={newProduct.name}
              onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })}
            />
            <Input
              placeholder="Price"
              value={newProduct.price}
              onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })}
            />
            <Input
              placeholder="Stock"
              value={newProduct.stock}
              onChange={(e) => setNewProduct({ ...newProduct, stock: e.target.value })}
            />
            <Button onClick={handleAddProduct}>Add Product</Button>
          </div>
        </TabsContent>
      </Tabs>
    </div>
  );
}
